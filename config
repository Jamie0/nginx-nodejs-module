ngx_addon_name=ngx_http_nodejs_module

nodejs_flags="-std=c++17"
nodejs_link_version=node

SYSTEM_NODE=0

libnode_path=`ldconfig -p 2>/dev/null | grep libnode.so$ | awk '{ print $4 }'`

. $ngx_addon_dir/config.bash

nodejs_libs="-L${libnode_path} -lstdc++ $nodejs_flags -lpthread -lz -lzlib -l${nodejs_link_version}"


ngx_feature="node"
ngx_feature_run=no
ngx_feature_path="$nodejs_include"
ngx_feature_libs="$nodejs_libs"
ngx_feature_incs="
#include <node.h>
#include <node_api.h>
#include <cstring>
"
ngx_feature_test="
	std::unique_ptr<node::MultiIsolatePlatform> platform =
		node::MultiIsolatePlatform::Create(4);
	v8::V8::InitializePlatform(platform.get());
"

. "$ngx_addon_dir/cpp_feature"

ngx_module_type=HTTP
ngx_module_name=$ngx_addon_name
ngx_module_incs="$nodejs_include"
ngx_module_deps=""
ngx_module_srcs=" $ngx_addon_dir/ngx_http_nodejs_module.cpp "
ngx_module_libs="$nodejs_libs"

echo $OSTYPE | grep darwin -q && export ngx_modext=".dylib"

. auto/module

NODE_NGX_SRCS="$ngx_module_srcs"

CXXFLAGS="$CXXFLAGS $nodejs_flags"

# HTTP_MODULES="$HTTP_MODULES ngx_http_nodejs_module"
